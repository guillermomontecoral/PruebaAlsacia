// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20250304153231_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in lectus id purus finibus euismod id eu arcu. Vivamus sit amet metus eget ipsum interdum eleifend quis sed leo. In purus magna, luctus eu urna et, feugiat gravida risus. Aenean eleifend magna ante, in elementum nunc laoreet sed. Aliquam posuere quis ex vel tempor.",
                            ExpirationDate = new DateOnly(2025, 3, 5),
                            Status = 2,
                            Title = "Prueba 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in lectus id purus finibus euismod id eu arcu. Vivamus sit amet metus eget ipsum interdum eleifend quis sed leo. In purus magna, luctus eu urna et, feugiat gravida risus. Aenean eleifend magna ante, in elementum nunc laoreet sed. Aliquam posuere quis ex vel tempor.",
                            ExpirationDate = new DateOnly(2025, 3, 22),
                            Status = 0,
                            Title = "Prueba 2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in lectus id purus finibus euismod id eu arcu. Vivamus sit amet metus eget ipsum interdum eleifend quis sed leo. In purus magna, luctus eu urna et, feugiat gravida risus. Aenean eleifend magna ante, in elementum nunc laoreet sed. Aliquam posuere quis ex vel tempor.",
                            ExpirationDate = new DateOnly(2025, 4, 4),
                            Status = 0,
                            Title = "Prueba 3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in lectus id purus finibus euismod id eu arcu. Vivamus sit amet metus eget ipsum interdum eleifend quis sed leo. In purus magna, luctus eu urna et, feugiat gravida risus. Aenean eleifend magna ante, in elementum nunc laoreet sed. Aliquam posuere quis ex vel tempor.",
                            ExpirationDate = new DateOnly(2025, 3, 14),
                            Status = 1,
                            Title = "Prueba 4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in lectus id purus finibus euismod id eu arcu. Vivamus sit amet metus eget ipsum interdum eleifend quis sed leo. In purus magna, luctus eu urna et, feugiat gravida risus. Aenean eleifend magna ante, in elementum nunc laoreet sed. Aliquam posuere quis ex vel tempor.",
                            ExpirationDate = new DateOnly(2025, 6, 4),
                            Status = 0,
                            Title = "Prueba 5",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "prueba@prueba.com",
                            Password = "Abcd1234_"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Task", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
